# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: PowerShell@2
  displayName: 'Get Agent IP Address'
  inputs:
    targetType: 'inline'
    script: |
      # Get the IP address of the agent
      $ipAddress = (Invoke-WebRequest -Uri "http://ifconfig.me").Content
      Write-Host "Agent IP Address: $ipAddress"

- task: AzureCLI@2
  inputs:
    azureSubscription: 'LZ1(1)(5cc96e7f-0fbb-4109-933a-42f31f8deee8)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage account network-rule add -g kartikeshn-app001 --account-name testsaappkn01 --ip-address 100.10.10.5/32'

- task: TerraformTaskV4@4
  name: TerraformInstallLatest
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  name: Init
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'LZ1(1)(5cc96e7f-0fbb-4109-933a-42f31f8deee8)'
    backendAzureRmResourceGroupName: 'kartikeshn-tfstate'
    backendAzureRmStorageAccountName: 'kartikeshntfstate'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV4@4
  name: Plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'LZ1(1)(5cc96e7f-0fbb-4109-933a-42f31f8deee8)'

- task: TerraformTaskV4@4
  name: Apply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'LZ1(1)(5cc96e7f-0fbb-4109-933a-42f31f8deee8)'